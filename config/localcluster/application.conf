
akka {
  loglevel = "DEBUG" // Do filtering on logback side.
  actor {
    provider = "cluster"
    debug.receive = false
    serialize-messages = off
    serialize-creators = off
  }

  extensions = [
    "akka.management.cluster.bootstrap.ClusterBootstrap"
  ]


  remote {
    // Will be enabled once we move to gRPC from the cluster client
    artery {
      enabled = true
      transport = tcp
      canonical {
        port = 355${NodeId}
      }
      //
      // It is cached in a way that should the cached value goes away when the remote ActorRef is garbage collected the cached value is as well
      // (and in addition to this the cached value is an int) so thatshould not be a problem.
      // So as long as you can create a few wildcard patterns to catch them all it should be fine.
      //large-message-destinations = [
      //  "/user/csm-to-bank-feedback-processor*/**",
      //  "/user/destination-manager/**",
      //  "/temp/**"
      //]
      // Temporary workaround. See KAN0349209
      advanced {
        maximum-frame-size = 15MiB
      }
    }
  }

  # Bind Cluster HTTP management to localhost
  management {
    http.hostname = "127.0.0.1"

    cluster.bootstrap.contact-point-discovery {
      service-name = "akka-workshop"
      required-contact-point-nr = 1
      discovery-method = config
    }
  }

  diagnostics.recorder.dir = "target/diagnostics/"

  discovery {
    method = config

    config.services {
      akka-workshop {
        endpoints = [
          {
            host = "127.0.0.1"
            port = 8558
          }
          {
            host = "127.0.0.1"
            port = 8559
          }
          {
            host = "127.0.0.1"
            port = 8560
          }
        ]
      }
    }
  }
}